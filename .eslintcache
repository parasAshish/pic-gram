[{"F:\\All About Ashish\\Projects\\outlook-mail\\src\\index.js":"1","F:\\All About Ashish\\Projects\\outlook-mail\\src\\reportWebVitals.js":"2","F:\\All About Ashish\\Projects\\outlook-mail\\src\\containers\\App.jsx":"3","F:\\All About Ashish\\Projects\\outlook-mail\\src\\reducers\\index.js":"4","F:\\All About Ashish\\Projects\\outlook-mail\\src\\sagas\\index.js":"5","F:\\All About Ashish\\Projects\\outlook-mail\\src\\api\\api.js":"6","F:\\All About Ashish\\Projects\\outlook-mail\\src\\components\\MenuComponent.jsx":"7","F:\\All About Ashish\\Projects\\outlook-mail\\src\\actions\\index.js":"8","F:\\All About Ashish\\Projects\\outlook-mail\\src\\constants\\AppConstants.js":"9","F:\\All About Ashish\\Projects\\outlook-mail\\src\\components\\MessageComponent.jsx":"10","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\index.js":"11","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\containers\\App.jsx":"12","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\reducers\\index.js":"13","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\sagas\\index.js":"14","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\components\\MenuComponent.jsx":"15","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\components\\MessageComponent.jsx":"16","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\constants\\AppConstants.js":"17","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\actions\\index.js":"18","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\index.js":"19","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\containers\\App.jsx":"20","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\reducers\\index.js":"21","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\sagas\\index.js":"22","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\components\\PicsLoaderComponent.jsx":"23","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\constants\\AppConstants.js":"24","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\actions\\index.js":"25","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\api\\api.js":"26","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\components\\Loading.jsx":"27","F:\\All About Ashish\\Git Projects\\pic-gram\\src\\components\\ImageModal.jsx":"28"},{"size":632,"mtime":1609927109257,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":425,"mtime":1609974391159,"results":"32","hashOfConfig":"30"},{"size":596,"mtime":1609956457507,"results":"33","hashOfConfig":"30"},{"size":2938,"mtime":1609968725995,"results":"34","hashOfConfig":"30"},{"size":1,"mtime":1609956409434,"results":"35","hashOfConfig":"30"},{"size":5093,"mtime":1609974899990,"results":"36","hashOfConfig":"30"},{"size":1043,"mtime":1609964710277,"results":"37","hashOfConfig":"30"},{"size":838,"mtime":1609963656414,"results":"38","hashOfConfig":"30"},{"size":4000,"mtime":1609975163616,"results":"39","hashOfConfig":"30"},{"size":632,"mtime":1609927109257,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1609974391159,"results":"42","hashOfConfig":"41"},{"size":841,"mtime":1610011818847,"results":"43","hashOfConfig":"41"},{"size":3027,"mtime":1610012610302,"results":"44","hashOfConfig":"41"},{"size":5549,"mtime":1610088053617,"results":"45","hashOfConfig":"41"},{"size":4576,"mtime":1610088603876,"results":"46","hashOfConfig":"41"},{"size":903,"mtime":1610011621772,"results":"47","hashOfConfig":"41"},{"size":1079,"mtime":1610012178443,"results":"48","hashOfConfig":"41"},{"size":632,"mtime":1609927109257,"results":"49","hashOfConfig":"50"},{"size":978,"mtime":1610547702779,"results":"51","hashOfConfig":"50"},{"size":749,"mtime":1610547747456,"results":"52","hashOfConfig":"50"},{"size":496,"mtime":1610521786979,"results":"53","hashOfConfig":"50"},{"size":6297,"mtime":1610548592394,"results":"54","hashOfConfig":"50"},{"size":97,"mtime":1610519369767,"results":"55","hashOfConfig":"50"},{"size":126,"mtime":1610519239668,"results":"56","hashOfConfig":"50"},{"size":176,"mtime":1610521706823,"results":"57","hashOfConfig":"50"},{"size":576,"mtime":1610519545476,"results":"58","hashOfConfig":"50"},{"size":705,"mtime":1610539473721,"results":"59","hashOfConfig":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bm85f9",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1cu4ztj",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"nzgbdl",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"F:\\All About Ashish\\Projects\\outlook-mail\\src\\index.js",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\reportWebVitals.js",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\containers\\App.jsx",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\reducers\\index.js",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\sagas\\index.js",["121","122"],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\api\\api.js",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\components\\MenuComponent.jsx",["123","124"],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\actions\\index.js",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\constants\\AppConstants.js",[],"F:\\All About Ashish\\Projects\\outlook-mail\\src\\components\\MessageComponent.jsx",[],"F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\index.js",[],["125","126"],"F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\containers\\App.jsx",[],"F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\reducers\\index.js",[],"F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\sagas\\index.js",["127","128"],"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { FLAGGED_INBOX_RECEIVED, GET_INBOX_MESSAGES, INBOX_RECEIVED, GET_SPAM_MESSAGES, SPAM_RECEIVED, UPDATE_MESSAGE, INBOX, SPAM, FLAG_MESSAGE, UNREAD_MESSAGE, DELETE_MESSAGE, GET_CUSTOM_MESSAGES, CUSTOM_RECEIVED, CUSTOM_FOLDER, GET_DELETED_MESSAGES, DELETED_RECEIVED, GET_INBOX_FLAGGED_MESSAGES } from '../constants/AppConstants';\n\nfunction* fetchInbox(action) {\n  yield put({ type: INBOX_RECEIVED, inboxData: action.payload, });\n}\n\nfunction* fetchSpam(action) {\n  yield put({ type: SPAM_RECEIVED, spamData: action.payload, });\n}\n\nfunction* fetchCustom(action) {\n  yield put({ type: CUSTOM_RECEIVED, customData: action.payload, });\n}\n\nfunction* fetchDeleted(action) {\n  yield put({ type: DELETED_RECEIVED, deletedData: action.payload, });\n}\n\nfunction* deleteMessage(action) {\n  const newData = action.payload.filter(msgObj => msgObj.mId !== action.selectedMessage.mId);\n  if (action.messageType === INBOX) {\n    yield put({ type: INBOX_RECEIVED, inboxData: newData, });\n  } else if (action.messageType === SPAM) {\n    yield put({ type: SPAM_RECEIVED, spamData: newData, });\n  } else if (action.messageType === CUSTOM_FOLDER) {\n    yield put({ type: CUSTOM_RECEIVED, customData: newData, });\n  }\n  const finalDeletedData = Object.assign(action.deletedData, []);\n  finalDeletedData.push(action.selectedMessage);\n  yield put({ type: DELETED_RECEIVED, deletedData: finalDeletedData, });\n}\n\nfunction* updateMessage(action) {\n  let newData = [];\n  if (action.messageActionType === FLAG_MESSAGE) {\n    newData = [];\n    newData = action.payload.map(msgObj => {\n      if (msgObj.mId === action.mId) {\n        msgObj.isFlag = !msgObj.isFlag;\n      }\n      return msgObj;\n    });\n  } else {\n    newData = [];\n    newData = action.payload.map(msgObj => {\n      if (msgObj.mId === action.mId) {\n        msgObj.unread = false;\n      }\n      return msgObj;\n    });\n  }\n  if (action.messageType === INBOX) {\n    yield put({ type: INBOX_RECEIVED, inboxData: newData, });\n  } else if (action.messageType === SPAM) {\n    yield put({ type: SPAM_RECEIVED, spamData: newData, });\n  } else if (action.messageType === CUSTOM_FOLDER) {\n    yield put({ type: CUSTOM_RECEIVED, customData: newData, });\n  } else {\n    yield put({ type: DELETED_RECEIVED, deletedData: newData, });\n  }\n}\n\nfunction* getFlaggedMessages(action) {\n  const newData = action.actualList.filter(msgObj => msgObj.isFlag === action.isFlag);\n  yield put({ type: FLAGGED_INBOX_RECEIVED, inboxFlaggedData: newData, });\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(GET_INBOX_MESSAGES, fetchInbox);\n  yield takeLatest(GET_SPAM_MESSAGES, fetchSpam);\n  yield takeLatest(GET_CUSTOM_MESSAGES, fetchCustom);\n  yield takeLatest(GET_DELETED_MESSAGES, fetchDeleted);\n\n  yield takeLatest(UPDATE_MESSAGE, updateMessage);\n  yield takeLatest(DELETE_MESSAGE, deleteMessage);\n  yield takeLatest(GET_INBOX_FLAGGED_MESSAGES, getFlaggedMessages);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher(),\n  ]);\n}\n","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\components\\MenuComponent.jsx",["129","130"],"import React, { Component } from 'react'\nimport { Menu, Grid, Label, Input, Checkbox } from 'semantic-ui-react'\nimport { INBOX, SPAM, DELETED_ITEMS, CUSTOM_FOLDER, DELETE_MESSAGE } from '../constants/AppConstants';\nimport { MessageComponent } from './MessageComponent.jsx'\nimport { getSpamMessages, getInboxMessages, getCustomMessages, getDeletedMessages, getInboxFlaggedMessages } from '../actions'\nimport { connect } from 'react-redux';\nimport inboxData from '../assets/inbox.json';\nimport spamData from '../assets/spam.json';\nimport customData from '../assets/custom.json';\nimport deletedData from '../assets/delete_folder.json';\n\nexport class MenuComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { activeItem: INBOX, isFlagChecked: true };\n    this.props.getInboxMessages(inboxData);\n    this.props.getSpamMessages(spamData);\n    this.props.getCustomMessages(customData);\n    this.props.getDeletedMessages(deletedData);\n  }\n  /**\n   * This method is used to handle onclick of menu items like Inbox,Spam etc.\n   * @param {*} e \n   * @param {*} param1 \n   */\n  handleItemClick = (e, { name }) => {\n    e.stopPropagation();\n    this.setState({ activeItem: name });\n    if (name === INBOX) {\n      this.props.getInboxMessages(this.props.inboxData);\n    } else if (name === SPAM) {\n      this.props.getSpamMessages(this.props.spamData);\n    } else if (name === CUSTOM_FOLDER) {\n      this.props.getCustomMessages(this.props.customData);\n    } else {\n      this.props.getDeletedMessages(this.props.deletedData);\n    }\n  }\n  /**\n   * This method is used to get toggled value of flag.\n   */\n  handleFlagChange = (e) => {\n    e.stopPropagation();\n    this.handleChildFlag();\n    this.setState({ isFlagChecked: !this.state.isFlagChecked });\n    this.props.getInboxFlaggedMessages(this.props.inboxData, this.props.inboxFlaggedData, this.state.isFlagChecked);\n  }\n  /**\n   * This method is used to calculate unread message count\n   * @param {*} messageList \n   */\n  getUnreadMessageCount(messageList) {\n    const unreadList = messageList.filter(message => message.unread);\n    return unreadList.length > 0 ? unreadList.length : '';\n  }\n\n  render() {\n    const { activeItem } = this.state;\n    const { inboxData, spamData, customData, deletedData } = this.props;\n    return (\n      <div>\n        <div className='search-widget'>\n          <Checkbox className='search-input' slider label={<label>Flagged Inbox Messages</label>}\n            onChange={this.handleFlagChange} disabled={activeItem !== INBOX} />\n        </div>\n        <Grid celled>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Menu vertical>\n\n                <Menu.Item name={INBOX}\n                  active={activeItem === INBOX}\n                  onClick={this.handleItemClick}>\n                  <Label>{inboxData ? this.getUnreadMessageCount(inboxData) : ''}</Label>\n                  {INBOX}\n                </Menu.Item>\n\n                <Menu.Item name={SPAM}\n                  active={activeItem === SPAM}\n                  onClick={this.handleItemClick}>\n                  <Label>{spamData ? this.getUnreadMessageCount(spamData) : ''}</Label>\n                  {SPAM}\n                </Menu.Item>\n\n                <Menu.Item name={DELETED_ITEMS}\n                  active={activeItem === DELETED_ITEMS}\n                  onClick={this.handleItemClick}>\n                  <Label>{deletedData ? this.getUnreadMessageCount(deletedData) : ''}</Label>\n                  {DELETED_ITEMS}\n                </Menu.Item>\n\n                <Menu.Item name={CUSTOM_FOLDER}\n                  active={activeItem === CUSTOM_FOLDER}\n                  onClick={this.handleItemClick}>\n                  <Label>{customData ? this.getUnreadMessageCount(customData) : ''}</Label>\n                  {CUSTOM_FOLDER}\n                </Menu.Item>\n\n              </Menu>\n            </Grid.Column>\n            <Grid.Column width={13}>\n              {activeItem === INBOX && inboxData && inboxData.length > 0 &&\n                <MessageComponent wholeData={inboxData} activeItem={INBOX}\n                  setFlag={click => this.handleChildFlag = click} />}\n              {activeItem === SPAM && spamData && spamData.length > 0 &&\n                <MessageComponent wholeData={spamData} activeItem={SPAM}\n                  setFlag={click => this.handleChildFlag = click} />}\n              {activeItem === CUSTOM_FOLDER && customData && customData.length > 0 &&\n                <MessageComponent wholeData={customData} activeItem={CUSTOM_FOLDER}\n                  setFlag={click => this.handleChildFlag = click} />}\n              {activeItem === DELETED_ITEMS && deletedData && deletedData.length > 0 &&\n                <MessageComponent wholeData={deletedData} activeItem={DELETED_ITEMS}\n                  setFlag={click => this.handleChildFlag = click} />}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  getSpamMessages: getSpamMessages,\n  getInboxMessages: getInboxMessages,\n  getCustomMessages: getCustomMessages,\n  getDeletedMessages: getDeletedMessages,\n  getInboxFlaggedMessages: getInboxFlaggedMessages\n};\n\nconst mapStateToProps = (state) => ({\n  inboxData: state.inboxData,\n  spamData: state.spamData,\n  customData: state.customData,\n  deletedData: state.deletedData,\n  inboxFlaggedData: state.inboxFlaggedData,\n  setFlaggedData: state.setFlaggedData\n});\n\nMenuComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MenuComponent);\n\nexport default MenuComponent;\n","F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\components\\MessageComponent.jsx",[],"F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\constants\\AppConstants.js",[],"F:\\All About Ashish\\Git Projects\\outlook-mail\\src\\actions\\index.js",[],["131","132"],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\index.js",[],["133","134"],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\containers\\App.jsx",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\reducers\\index.js",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\sagas\\index.js",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\components\\PicsLoaderComponent.jsx",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\constants\\AppConstants.js",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\actions\\index.js",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\api\\api.js",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\components\\Loading.jsx",[],"F:\\All About Ashish\\Git Projects\\pic-gram\\src\\components\\ImageModal.jsx",[],{"ruleId":"135","severity":1,"message":"136","line":1,"column":32,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"139","line":2,"column":123,"nodeType":"137","messageId":"138","endLine":2,"endColumn":137},{"ruleId":"135","severity":1,"message":"140","line":2,"column":29,"nodeType":"137","messageId":"138","endLine":2,"endColumn":34},{"ruleId":"135","severity":1,"message":"141","line":3,"column":53,"nodeType":"137","messageId":"138","endLine":3,"endColumn":67},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":32,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"139","line":2,"column":147,"nodeType":"137","messageId":"138","endLine":2,"endColumn":161},{"ruleId":"135","severity":1,"message":"140","line":2,"column":29,"nodeType":"137","messageId":"138","endLine":2,"endColumn":34},{"ruleId":"135","severity":1,"message":"141","line":3,"column":53,"nodeType":"137","messageId":"138","endLine":3,"endColumn":67},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"142","replacedBy":"148"},{"ruleId":"144","replacedBy":"149"},"no-unused-vars","'call' is defined but never used.","Identifier","unusedVar","'UNREAD_MESSAGE' is defined but never used.","'Input' is defined but never used.","'DELETE_MESSAGE' is defined but never used.","no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],["150"],["151"],"no-global-assign","no-unsafe-negation"]